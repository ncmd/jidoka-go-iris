{
  "name": "jidoka-go-iris",
  "homepage": "jidoka-go-iris.herokuapp.com",
  "version": "0.5.0",
  "private": false,
  "engines": {
    "node": "latest",
    "npm": "latest"
  },
  "config": {
    "servername": "jidoka-go-iris",
    "servport": "8000",
    "githubprojectname": "https://github.com/ncmd/jidoka-go-iris.git"
  },
  "scripts": {
    "dev": "concurrently \"npm run start --prefix client\" \"go build *.go && ./app\"",
    "commit": "git add . && git commit -m \"Commit\"",
    "deploy": "npm run heroku-deploy && git rm -r --cached .idea ; git add . && git commit -am \"Deployed Build\" && git push ",
    "docker-test": "npm run docker-build && npm run docker-run",
    "docker-run": "docker stop $(docker ps -a -q) ; docker run -p $npm_package_config_servport:$npm_package_config_servport $npm_package_config_servername && open http://localhost:$npm_package_config_servport",
    "heroku-deploy": "npm run docker-build && npm run heroku-replace",
    "heroku-replace": "heroku apps:destroy --app $npm_package_config_servername --confirm $npm_package_config_servername ; git init && heroku create $npm_package_config_servername && heroku container:push web && heroku open && heroku logs",
    "docker-build": "export GOPATH=$HOME/go ; npm run build-client && dep ensure -update && docker build -t $npm_package_config_servername .",
    "docker-clean": "docker stop $(docker ps -a -q) ; docker rm $(docker ps -a -q) -f ; docker rmi $(docker images -q) -f",
    "build-client": "npm run build --prefix client && go-bindata ./client/build/...",
    "dev-latest": "brew update && brew upgrade && brew dep && sudo npm install -g npm",
    "dev-env": "export GOPATH=$HOME/go && export PATH=$PATH:$GOPATH/bin",
    "dev-github": "git init ; git add . ; git commit -m \"Init Project\"; git remote add origin $npm_package_config_githubprojectname ; git remote -v ; git push -u origin master"
  },
  "dependencies": {
    "concurrently": "^3.5.1"
  }
}
